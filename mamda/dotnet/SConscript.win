#!/usr/bin/python
# -*- coding: utf-8 -*-
import os
import posixpath
import platform
from custom_builders import install_dotnet_library
from custom_builders import build_ndoc
Import('env')
env = env.Clone()
versions = env['versions']['mamda']
major = versions['major']
minor = versions['minor']
release = versions['release']
buildNum = versions['build']
winrelease = versions['winrelease']
releaseString = versions['releaseString']

env.AddMethod(install_dotnet_library, "InstallDotNetLibrary")
env.AddMethod(build_ndoc, "BuildNDoc")

dotnet_version = env['dotnet_version']

if platform.machine() == 'AMD64':
    framework = 'Framework64'
else:
    framework = 'Framework'

framework_dir = posixpath.join( 'c:/windows/Microsoft.NET/',framework )

if dotnet_version == '2.0':
    framework_dir = posixpath.join( framework_dir, 'v2.0.50727' )

elif dotnet_version == '1.0':
    framework_dir = posixpath.join( framework_dir, 'v1.1.4322' )

env['CSC'] = posixpath.join(framework_dir,'csc.exe')
AssemblyRefs = []
AssemblyRefs.append(posixpath.join( framework_dir, 'mscorlib.dll'))
AssemblyRefs.append(posixpath.join( framework_dir, 'system.dll'))
AssemblyRefs.append(os.path.join( Dir('#').abspath, 'objdir\\%s\\mama\\dotnet\\MAMA.dll' )% env['build'])

env.Append(
    CSCFLAGS        = ['/nostdlib+'],
    ASSEMBLYREFS    = AssemblyRefs
)


cs = os.path.join( Dir('#').abspath, 'mamda\\dotnet\\src\\cs\\MamdaVersion.cs' )
ver = open( cs , "w" )
ver.write("""
namespace Wombat
{
    public class MamdaVersion
    {
        public static int MAMDADOTNET_VERSION_MAJOR = %s;
        public static int MAMDADOTNET_VERSION_MINOR = %s;
        public static string MAMDADOTNET_VERSION_RELEASE = "%s";
        public static string MAMDADOTNET_VERSION = "mamdadotnet %s";
    }
}
""" % ( major,minor,release, releaseString ) )
ver.close()

build = env['build']

sources = Split("""
src\cs\MamdaVersion.cs
src\cs\AssemblyInfo.cs
src\cs\MamdaBasicEvent.cs
src\cs\MamdaBasicRecap.cs
src\cs\MamdaCommonFields.cs
src\cs\MamdaUncrossPriceInd.cs
src\cs\MamdaAuctionFields.cs
src\cs\MamdaAuctionHandler.cs
src\cs\MamdaAuctionListener.cs
src\cs\MamdaAuctionRecap.cs
src\cs\MamdaAuctionUpdate.cs
src\cs\MamdaConcreteOrderImbalanceRecap.cs
src\cs\MamdaConcreteQuoteRecap.cs
src\cs\MamdaConcreteSecurityStatusRecap.cs
src\cs\MamdaConcreteTradeRecap.cs
src\cs\MamdaDataException.cs
src\cs\MamdaErrorCode.cs
src\cs\MamdaErrorListener.cs
src\cs\MamdaErrorSeverity.cs
src\cs\MamdaFields.cs
src\cs\MamdaFieldState.cs
src\cs\MamdaFundamentalFields.cs
src\cs\MamdaFundamentalHandler.cs
src\cs\MamdaFundamentalListener.cs
src\cs\MamdaFundamentals.cs
src\cs\MamdaMsgListener.cs
src\cs\MamdaMultiParticipantHandler.cs
src\cs\MamdaMultiParticipantManager.cs
src\cs\MamdaMultiSecurityHandler.cs
src\cs\MamdaMultiSecurityManager.cs
src\cs\MamdaOrderImbalanceFields.cs
src\cs\MamdaOrderImbalanceHandler.cs
src\cs\MamdaOrderImbalanceListener.cs
src\cs\MamdaOrderImbalanceRecap.cs
src\cs\MamdaOrderImbalanceSide.cs
src\cs\MamdaOrderImbalanceType.cs
src\cs\MamdaQuality.cs
src\cs\MamdaQuoteClosing.cs
src\cs\MamdaQuoteFields.cs
src\cs\MamdaQuoteGap.cs
src\cs\MamdaQuoteHandler.cs
src\cs\MamdaQuoteListener.cs
src\cs\MamdaQuoteRecap.cs
src\cs\MamdaQuoteUpdate.cs
src\cs\MamdaResourceManager.cs
src\cs\MamdaSecurityStatusFields.cs
src\cs\MamdaSecurityStatusHandler.cs
src\cs\MamdaSecurityStatusListener.cs
src\cs\MamdaSecurityStatus.cs
src\cs\MamdaSecurityStatusQual.cs
src\cs\MamdaSecurityStatusRecap.cs
src\cs\MamdaSecurityStatusUpdate.cs
src\cs\MamdaStaleListener.cs
src\cs\MamdaSubscription.cs
src\cs\MamdaTradeCancelOrError.cs
src\cs\MamdaTradeClosing.cs
src\cs\MamdaTradeCorrection.cs
src\cs\MamdaTradeFields.cs
src\cs\MamdaTradeGap.cs
src\cs\MamdaTradeHandler.cs
src\cs\MamdaTradeListener.cs
src\cs\MamdaTradeRecap.cs
src\cs\MamdaTradeReport.cs
src\cs\MamdaTradeSide.cs
src\cs\Containers\Collection.cs
src\cs\Containers\Comparable.cs
src\cs\Containers\Comparator.cs
src\cs\Containers\DefaultComparator.cs
src\cs\Containers\HashMap.cs
src\cs\Containers\Helpers.cs
src\cs\Containers\Iterable.cs
src\cs\Containers\Iterator.cs
src\cs\Containers\Map.cs
src\cs\Containers\Set.cs
src\cs\Containers\SortedMap.cs
src\cs\Containers\SortedSet.cs
src\cs\Containers\TreeMap.cs
src\cs\Containers\RedBlackTree.cs
src\cs\Containers\ArrayListCollection.cs
src\cs\Containers\TreeSet.cs
src\cs\Options\MamdaOptionAtTheMoneyCompareType.cs
src\cs\Options\MamdaOptionChain.cs
src\cs\Options\MamdaOptionChainHandler.cs
src\cs\Options\MamdaOptionChainListener.cs
src\cs\Options\MamdaOptionChainView.cs
src\cs\Options\MamdaOptionChainViewRangeHandler.cs
src\cs\Options\MamdaOptionContract.cs
src\cs\Options\MamdaOptionContractSet.cs
src\cs\Options\MamdaOptionExchangeUtils.cs
src\cs\Options\MamdaOptionExpirationDateSet.cs
src\cs\Options\MamdaOptionExpirationStrikes.cs
src\cs\Options\MamdaOptionFields.cs
src\cs\Options\MamdaOptionSeriesUpdate.cs
src\cs\Options\MamdaOptionStrikeSet.cs
src\cs\Options\MamdaOptionUnderlying.cs
src\cs\Options\SimpleDateFormat.cs
src\cs\OrderBook\MamdaOrderBook.cs
src\cs\OrderBook\MamdaOrderBookChecker.cs
src\cs\OrderBook\MamdaOrderBookCheckerHandler.cs
src\cs\OrderBook\MamdaOrderBookCheckType.cs
src\cs\OrderBook\MamdaOrderBookDelta.cs
src\cs\OrderBook\MamdaOrderBookEntry.cs
src\cs\OrderBook\MamdaOrderBookException.cs
src\cs\OrderBook\MamdaOrderBookFields.cs
src\cs\OrderBook\MamdaOrderBookGap.cs
src\cs\OrderBook\MamdaOrderBookHandler.cs
src\cs\OrderBook\MamdaOrderBookListener.cs
src\cs\OrderBook\MamdaOrderBookPriceLevel.cs
src\cs\OrderBook\MamdaOrderBookRecap.cs
src\cs\OrderBook\MamdaBookAtomicBookHandler.cs
src\cs\OrderBook\MamdaBookAtomicGap.cs
src\cs\OrderBook\MamdaBookAtomicLevel.cs
src\cs\OrderBook\MamdaBookAtomicLevelEntry.cs
src\cs\OrderBook\MamdaBookAtomicLevelEntryHandler.cs
src\cs\OrderBook\MamdaBookAtomicLevelHandler.cs
src\cs\OrderBook\MamdaBookAtomicListener.cs
""")

examples = {}

mamdabookchurn_source = Split("""
src\examples\MamdaBookChurn\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaBookChurn\MamdaBookChurn.cs""")
examples['MamdaBookChurn'] = mamdabookchurn_source

mamdabookselftest_source = Split("""
src\\testtools\MamdaBookSelfTest\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\\testtools\MamdaBookSelfTest\MamdaBookSelfTest.cs""")
examples['MamdaBookSelfTest'] = mamdabookselftest_source

mamdabookticker_source = Split("""
src\examples\MamdaBookTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaBookTicker\MamdaBookTicker.cs""")
examples['MamdaBookTicker'] = mamdabookticker_source

mamdaatomicbookticker_source = Split("""
src\examples\MamdaAtomicBookTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaAtomicBookTicker\MamdaAtomicBookTicker.cs""")
examples['MamdaAtomicBookTicker'] = mamdaatomicbookticker_source

mamdaauctionticker_source = Split("""
src\examples\MamdaAuctionTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaAuctionTicker\MamdaAuctionTicker.cs""")
examples['MamdaAuctionTicker'] = mamdaauctionticker_source

mamdacomboticker_source = Split("""
src\examples\MamdaComboTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaComboTicker\MamdaComboTicker.cs""")
examples['MamdaComboTicker'] = mamdacomboticker_source

mamdalistencs_source = Split("""
src\examples\MamdaListen\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaListen\MamdaListen.cs""")
examples['MamdaListencs'] = mamdalistencs_source

mamdamultipartticker_source = Split("""
src\examples\MamdaMultiPartTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\ComboTicker.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaMultiPartTicker\MamdaMultiPartTicker.cs""")
examples['MamdaMultiPartTicker'] = mamdamultipartticker_source

mamdamultisecurityticker_source = Split("""
src\examples\MamdaMultiSecurityTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\ComboTicker.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaMultiSecurityTicker\MamdaMultiSecurityTicker.cs""")
examples['MamdaMultiSecurityTicker'] = mamdamultisecurityticker_source

mamdaoptionchainexample_source = Split("""
src\examples\MamdaOptionChainExample\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaExamplesCommon\UnderlyingTicker.cs
src\examples\MamdaOptionChainExample\MamdaOptionChainExample.cs""")
examples['MamdaOptionChainExample'] = mamdaoptionchainexample_source

mamdaoptionchainviewexample_source = Split("""
src\examples\MamdaOptionChainViewExample\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaExamplesCommon\UnderlyingTicker.cs
src\examples\MamdaOptionChainViewExample\MamdaOptionChainViewExample.cs""")
examples['MamdaOptionChainViewExample'] = mamdaoptionchainviewexample_source

mamdaquoteticker_source = Split("""
src\examples\MamdaQuoteTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaQuoteTicker\MamdaQuoteTicker.cs""")
examples['MamdaQuoteTicker'] = mamdaquoteticker_source

mamdasecstatusticker_source = Split("""
src\examples\MamdaSecStatusTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaSecStatusTicker\MamdaSecStatusTicker.cs""")
examples['MamdaSecStatusTicker'] = mamdasecstatusticker_source

mamdatradeticker_source = Split("""
src\examples\MamdaTradeTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaTradeTicker\MamdaTradeTicker.cs""")
examples['MamdaTradeTicker'] = mamdatradeticker_source

mamdafundamentalticker_source = Split("""
src\examples\MamdaFundamentalTicker\AssemblyInfo.cs
src\examples\MamdaExamplesCommon\CommandLineProcessor.cs
src\examples\MamdaFundamentalTicker\MamdaFundamentalTicker.cs""")
examples['MamdaFundamentalTicker'] = mamdafundamentalticker_source

if 'dynamic-debug' == env['build']:
    env.Append( CSCFLAGS = ['/debug','/define:DEBUG;TRACE'] )
elif 'dynamic' == env['build']:
    env.Append( CSCFLAGS = ['/optimize','/define:TRACE'] )
elif 'static' in env['build']:
    env.Log("MAMDA is not built statically")

target = "MAMDA"

if 'dynamic' in env['build']:
    lib, doc_xml = env.InstallDotNetLibrary(target, sources)

if env['with_docs'] == True:
    doc_dir = "%s/doc/mamda/dotnet/" % (env['prefix'])
    doc = env.BuildNDoc(lib, doc_xml, doc_dir)

    if env['with_examples'] == True:
        for key in examples:
            exe = env.CLIProgram( key + '.exe', examples[key],
                                    ASSEMBLYREFS = [ AssemblyRefs, lib ],
                                    WINEXE = 1)
            Alias('install',env.Install('$bindir',exe ) )

    if env['with_testtools'] == True:
        env.Log("C# testtool MamdaBookSelfTest included in examples")


Clean(lib, cs)
