#!/usr/bin/python
# -*- coding: utf-8 -*-
import os
Import('env')
env = env.Clone()

includePath = []
includePath.append('.')
includePath.append('../cpp')
includePath.append('#mamda/c_cpp/src/cpp')
includePath.append('#mamda/c_cpp/src/cpp/mamda')
includePath.append('#mama/c_cpp/src/c')
includePath.append('#mama/c_cpp/src/cpp')
includePath.append('#common/c_cpp/src/c')
includePath.append('$prefix/include')

libPath = []
libPath.append('$prefix/lib')

# Can't Glob because of mamdapublisher.cpp

examples = \
    Split("""
auctionticker.cpp
comboticker.cpp
currencyticker.cpp
dictrequester.cpp
fundamentallisten.cpp
mamdalisten.cpp
multipartticker.cpp
multisecurityticker.cpp
optionchainer.cpp
optionview.cpp
orderimbalanceticker.cpp
parsecmd.cpp
quoteticker.cpp
secstatuslisten.cpp
tradeticker.cpp
""")

examples.append('Makefile.sample')
examples.append('dictrequester.h')
examples.append('parsecmd.h')

env.Append(LDFLAGS=['-rdynamic'])
env.Append(LIBPATH=libPath)
env.Append(CPPPATH=[includePath])
if env['host']['os'] == 'Darwin':
    env.Append(LIBS=[
                     'mama',
                     'mamacpp',
                     'mamda',
                     'pthread',
                     'dl',
                     'm',
                     ])
else:
    env.Append(LIBS=[
                     'mama',
                     'mamacpp',
                     'mamda',
                     'pthread',
                     'dl',
                     'nsl',
                     'm',
                     ])

if env['entitled'] == True:
    env.Append(
    LIBPATH = [ os.path.join(env['entitle_home'],'lib') ],
    LIBS = ['oeac']
)

bins = [
    'comboticker',
    'mamdalisten',
    'multipartticker',
    'multisecurityticker',
    'optionchainer',
    'optionview',
    'quoteticker',
    'tradeticker',
    'orderimbalanceticker',
    'secstatuslisten',
    'fundamentallisten',
    'currencyticker',
    'auctionticker',
    ]

binary = []

parsecmdObj = env.Object('parsecmd', 'parsecmd.cpp')
dictrequesterObj = env.Object('dictrequester', 'dictrequester.cpp')

for b in bins:
    sources = []
    sources.append('%s.cpp' % b)
    sources.append(parsecmdObj)
    sources.append(dictrequesterObj)

    if 'option' in b:
        binary.append(env.Program(b, sources, LIBS=env['LIBS']
                      + ['mamdaoptions']))
    else:
        binary.append(env.Program(b, sources))

Alias('install', env.Install('$bindir', binary))
Alias('install', env.Install('$prefix/examples/mamda/cpp', examples))

env.SConscript('news/SConscript', 'env')
env.SConscript('orderbooks/SConscript', 'env')
