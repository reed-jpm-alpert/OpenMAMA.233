#!/usr/bin/python
# -*- coding: utf-8 -*-
import os
Import('env')
env = env.Clone()

includePath = []
includePath.append('.')
includePath.append('..')
includePath.append('../cpp')
includePath.append('../cpp/mamda')
includePath.append('../cpp/options')
includePath.append('../cpp/orderbooks')
includePath.append('#mama/c_cpp/src/c')
includePath.append('#mama/c_cpp/src/cpp')
includePath.append('#common/c_cpp/src/c')
includePath.append('#common/c_cpp/src/cpp')
includePath.append('$incdir')

libPath = []
libPath.append('$libdir')

env.Append(LIBPATH=libPath)
env.Append(CPPPATH=[includePath])
if env['host']['os'] == 'Darwin':
    env.Append(LIBS=[
                     'mamdabook',
                     'mamda',
                     'mamacpp',
                     'wombatcommon',
                     'mama',
                     'pthread',
                     ])
else:
    env.Append(LIBS=[
                     'mamdabook',
                     'mamda',
                     'mamacpp',
                     'wombatcommon',
                     'mama',
                     'rt',
                     'pthread',
                     ])

if env['entitled'] == True:
    env.Append(
    LIBPATH = [ os.path.join(env['entitle_home'],'lib') ],
    LIBS = ['oeac']
)

bins = ['bookselftest', 'quoteselftest', 'tradeselftest']

binary = []

for b in bins:
    binary.append(env.Program(b, ['%s.cpp' % b, '../examples/parsecmd.o'
                  , '../examples/dictrequester.o']))

Alias('install', env.Install('$bindir', binary))
