#!/usr/bin/python
# -*- coding: utf-8 -*-
import os
Import('env')
env = env.Clone()

includePath = []
includePath.append('.')
includePath.append('..')
includePath.append('../../c')
includePath.append('#mamda/c_cpp/src/cpp')

# includePath.append('#mamda/c_cpp/src/examples')

includePath.append('#mamda/c_cpp/src/cpp/mamda')
includePath.append('#mama/c_cpp/src/c')
includePath.append('#mama/c_cpp/src/cpp')
includePath.append('#common/c_cpp/src/c')
includePath.append('$prefix/include')

libPath = []
libPath.append('$prefix/lib')

env.Append(LIBPATH=libPath)
env.Append(CPPPATH=[includePath])
if env['host']['os'] == 'Darwin':
    env.Append(LIBS=[
                     'mama',
                     'mamacpp',
                     'mamda',
                     'mamdabook',
                     'wombatcommon',
                     ])
else:
    env.Append(LIBS=[
                     'mama',
                     'mamacpp',
                     'mamda',
                     'mamdabook',
                     'rt',
                     'wombatcommon',
                     ])


env['CCFLAGS'] = [x for x in env['CCFLAGS'] if x != '-pedantic-errors']

sources = Glob('*.cpp')
sources.append(Split("""
../common/MainUnitTest.o
../common/MamdaUnitTestUtils.o
"""))

binary = env.Program('UnitTestMamdaQuote', sources)

Alias('install', env.Install('$bindir', binary))
