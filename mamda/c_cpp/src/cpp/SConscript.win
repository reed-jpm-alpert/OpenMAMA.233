import os
Import('env')
env = env.Clone()

sources = []

target = 'libmamda'

env.Append( CPPDEFINES = ['MAMDA'] )
env.Append( LIBS = ['libmamac%s' % ( env['suffix'] ) ] )
env.Append( LIBS = ['libmamacpp%s' % ( env['suffix'] ) ] )
env.Append( LIBS = ['libwombatcommon%s' % ( env['suffix'] ) ] )

sources = Split( """
version.c
MamdaLockWin32.cpp
MamdaBasicSubscription.cpp
MamdaAuctionFields.cpp
MamdaAuctionListener.cpp
MamdaCommonFields.cpp
MamdaConcreteBasicEvent.cpp
MamdaFundamentalFields.cpp
MamdaFundamentalListener.cpp
MamdaQuoteFields.cpp
MamdaQuoteListener.cpp
MamdaSecStatusFields.cpp
MamdaSecStatusListener.cpp
MamdaSecStatusSymbolSourceAdapter.cpp
MamdaSubscription.cpp
MamdaTradeFields.cpp
MamdaTradeListener.cpp
MamdaTradeDirection.cpp
MamdaTradeExecVenue.cpp
MamdaTradeSide.cpp
MamdaMultiParticipantManager.cpp
MamdaMultiSecurityManager.cpp
MamdaPubStatusFields.cpp
MamdaPubStatusListener.cpp
MamdaSecurityStatus.cpp
MamdaSecurityStatusQual.cpp
MamdaOrderImbalanceFields.cpp
MamdaOrderImbalanceType.cpp
MamdaOrderImbalanceSide.cpp
MamdaUncrossPriceInd.cpp
MamdaUtils.cpp
MamdaVersion.cpp
MamdaQuery.cpp
""")

sources.append( env.Object('mamda_wtable','#common/c_cpp/src/c/wtable.c') )
sources.append( env.Object('mamda_lookup2','#common/c_cpp/src/c/lookup2.c') )

headers = Glob('mamda/*.h')

if env['with_testtools'] == True:
	sources.append( Split("""
	  MamdaQuoteChecker.cpp
	  MamdaCheckerType.cpp
	  MamdaTradeChecker.cpp
	""") )

env.SConscript('options/SConscript.win','env')
env.SConscript('orderbooks/SConscript.win','env')
env.SConscript('news/SConscript.win','env')

env.InstallLibrary(sources, target)

if ( 'dynamic' == env['build'] or len(env['buildtype']) == 1 ):
    env.Install('$incdir/mamda',headers)
