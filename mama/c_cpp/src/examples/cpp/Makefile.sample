# $Id$
#
# OpenMAMA: The open middleware agnostic messaging API
# Copyright (C) 2011 NYSE Technologies, Inc.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA
#

#==============================================================================
# To build MAMA examples set the following:
#   API_HOME: Path to API installation
#   API_PLATFORM: tibrv/lbm/avis
#   tibrv_HOME: Path to TIBRV installation (TIBRV only)
#   avis_HOME: Path to AVIS/ELVIN installation (AVIS only)
#   lbm_HOME: Path to LBM installation (LBM only - usually same as API home)
#   wmw_HOME: Path to WMW installation (WMW only)
#=============================================================================
# Example:
#    make -f Makefile.sample API_HOME=/home/wombat/apis
#=============================================================================
# SOLARIS/Forte: The makefile will need modified to use the Solaris compiler.
#                See example below.
#=============================================================================
API_HOME=../../../

## Solaris/Forte compiler:
#CXX      = CC
#CC       = cc
#BSTATIC  = -Bstatic
#BDYNAMIC = -Bdynamic

# GNU compiler:
ifeq (,$(CXX))
  CXX = g++
endif
ifeq (,$(CC))
  CC = gcc
endif
BSTATIC  = -Xlinker -Bstatic
BDYNAMIC = -Xlinker -Bdynamic

## Solaris system libraries:
#SYS_LIBS = -lsocket -lgen -lnsl -ldl

# Standard defines:
CPPFLAGS     = \
    -I$(API_HOME)/include
    
LDFLAGS      = -rdynamic \
    -L$(API_HOME)/lib


MAMA_LIBS    = $(BDYNAMIC) -lmama \
               $(BDYNAMIC) $($(API_PLATFORM)_libs) -lrt -lpthread -lm -ldl -lpthread
MAMACPP_LIBS = $(BSTATIC) -lmamacpp $(BDYNAMIC) $(MAMA_LIBS) 

# Targets:

all: mamalistencpp mamainboxcpp \
 	mamapublishercpp mamasubscribercpp \
 	mamasymbollistsubscribercpp \
	mamaproxycpp mamaiocpp \
	mamaftmembercpp mamalistencachedcpp
    
mamalistencpp: mamalistencpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)

mamapublishercpp: mamapublishercpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)

mamasubscribercpp: mamasubscribercpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)

mamainboxcpp: mamainboxcpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)

mamaiocpp: mamaiocpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)

mamaproxycpp: mamaproxycpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)

mamasymbollistsubscribercpp: mamasymbollistsubscribercpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)

mamaftmembercpp: mamaftmembercpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)

mamalistencachedcpp: mamalistencachedcpp.o
	$(LINK.C) -o $@ $^ $(MAMACPP_LIBS) $(SYS_LIBS)
