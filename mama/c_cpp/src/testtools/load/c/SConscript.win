Import('env')
env = env.Clone()

InstBin = []

binaries = Split("""
    mamachurnc
""")

libs = []
libs.append('libmamac%s' % ( env['suffix'] ))

libpath = []

if 'static' in env['build']:
    libs.append('libwombatmsg%s' % ( env['suffix'] ))
    libs.append('libwombatcommon%s' % ( env['suffix'] ))
    libs.append('shlwapi')
    if 'lbm' in env['middleware']:
        libpath.append( os.path.join( lbm_home, 'lib' ) )
        libs.append('lbm_static')
        libs.append('libmamalbmimpl%s' % ( env['suffix'] ))
    if env['entitled'] == True:
        libs.append( posixpath.join( env['entitle_home'], 'lib/%s/liboeac%s' % ( env['build'],env['suffix'])) )

env.Append(
    LIBS        = libs,
    LIBPATH     = libpath,
)

env.LogWarning("MamaChurnC not being built, not currently working on windows")

#for b in binaries:
#    example = env.Program(b, '%s.c' % (b) )
#    if env['vsver'] >= 8:
#        env.AddPostAction( example, 'mt.exe -nologo -manifest ${TARGET}.manifest -outputresource:$TARGET;1')
#    InstBin.append( example )
#
#Alias( 'install', env.Install('$bindir',InstBin) )
